					addi $t0, $0, 5			// i = 5 (saveToMem loop runs while i > 0)		
					subi $s0, $0, -8		// memory address 8. which means 2nd word (0 indexed)
					beq $t0, $0, 6			// if i == 0, branch to loopExit
					move $a0, $t0			// $a0 = i (it will be sent to subroutine)
					jal 10 					// recieving the calculated value (it will be saved in $v0 by the subroutine and then it will be saved in memory)
					sw $v0, 0($s0)			// save the value in memory
					addi $s0, $s0, 4		// incrementing the memory by 4 to reach the next word
					subi $t0, $t0, 1		// i--
					j 2						// jump to loop
					bne $s0, $0, 2			// if $s0 is not 0, branch to exit (since s0 keeps the memory address and it is a possitive number -at this point-, this branch should be taken)
					ori $v0, $a0, 2049		// calculating the value and saving it in $v0. this is basically bitwise or operation with 2049.
					jr $ra					// return back
					addi $s0, $0, 12		// memory address is set to 12. which means 3rd word (0 indexed)
					lb $s1, 0($s0)			// reading the first byte of 3rd word and saving it in $s1 (first byte means the rightmost byte)
					slt $t1, $s1, $s0		// if the value we just read is smaller than its address, set $t1 to 1. Otherwise, set $t1 to 0.